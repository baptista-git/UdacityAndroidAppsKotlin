{
  "videos": [
    {
      "title": "Meet Studio Bot - the AI powered coding assistant in Android Studio",
      "description": "Studio Bot is an AI powered coding assistant that is tightly integrated in Android Studio, designed to make you more productive. This was announced at Google I/O 2023 as an early experiment that helps you write and debug code, and answers your Android development questions.\n\nLearn more → https://g.co/android/studiobot\nDownload the latest version of Android Studio → https://goo.gle/42nkyXq\n\nWatch all Android and Play Sessions → https://goo.gle/IO23_android_play\nSubscribe to Android Developers → https://goo.gle/AndroidDevs\n\n#GoogleIO #Featured #AndroidDevelopers",
      "url": "https://www.youtube.com/watch?v=kfbXQbt7TBg",
      "updated": "2023-05-10T20:46:22+00:00",
      "thumbnail": "https://i4.ytimg.com/vi/kfbXQbt7TBg/hqdefault.jpg"
    },
    {
      "title": "What's new in Android Studio - Flamingo",
      "description": "Android Studio Flamingo version 2022.2.1 is now available for download on the stable channel. In this version, you can find improvements for building beautiful UIs, new features that help you debug and inspect your apps and more! \n\nChapters:\n00:00 Introduction\n00:51 Live Edit\n01:48 Templates use Material 3\n02:09 Preview your UI with Material 3 dynamic colors\n03:07 Compose composition tracing and one-click profileable build & run\n05:14 App Quality Insights improvements\n07:00 Network Inspector traffic interception\n08:37 Layout inspector auto attach to foreground process\n08:50 Build Analyzer task categories\n09:31 Android Gradle Plugin 8.0 breaking changes\n11:33 Lint support for SDK Extensions\n11:54 Wrap up\n\nResources: \nLive Edit → https://goo.gle/live-edit  \nProfileable Builds → https://goo.gle/profileable-builds  \nSystem Tracing Basics  → https://goo.gle/mad-performance  \nApp Quality Insights  → https://goo.gle/app-quality-insights  \nSDK Extensions  → https://d.android.com/guide/sdk-extensions  \n\nArticles:\nAGP Changes → https://goo.gle/408Qtsl \nProfileable Builds → https://goo.gle/416mi6A \n\nAndroid Studio release notes → https://goo.gle/3fRB0bq   \nAGP release notes → https://goo.gle/3rHGB9Q   \nFile an Android Studio bug → https://goo.gle/3fJWIhR   \n \nCatch more videos → https://goo.gle/AndroidStudio-Tools  \nSubscribe to Android Developers → https://goo.gle/AndroidDevs  \n\n#Featured​ #Develop​ #AndroidStudio",
      "url": "https://www.youtube.com/watch?v=41VZhwrXAKI",
      "updated": "2023-04-13T23:27:40+00:00",
      "thumbnail": "https://i1.ytimg.com/vi/41VZhwrXAKI/hqdefault.jpg"
    },
    {
      "title": "What's new in Android Studio - Electric Eel",
      "description": "Android Studio Electric Eel is now available for download on the stable channel. This release contains many new features and improvements, including the new Logcat UI enabled by default, App Quality Insights, improvements to Jetpack Compose previews,  new options for emulators and devices, and more!\n\nChapters:\n0:00 Introduction\n0:27 New Logcat UI\n1:22 App Quality Insights\n2:11 Use Compose Preview with different devices\n2:47 Automatic updates in Compose previews\n3:15 Recomposition highlights in Layout Inspector\n3:47 Visual Linting for XML layouts\n4:34 Download impact in Build Analyzer\n5:16 Upgrade Assistant improvements\n5:40 Google Play SDK Index integrations\n6:14 Desktop emulator\n6:38 Resizable emulator\n6:58 Device mirroring\n7:49 Conclusion\n\nLearn more about the new Logcat:\nDolphin release video: https://goo.gle/3IERovy \nDocumentation: https://goo.gle/3GXqU7e \n\nOther resources:\nAndroid Studio release notes → https://goo.gle/3fRB0bq   \nAGP release notes → https://goo.gle/3rHGB9Q \nFile an Android Studio bug → https://goo.gle/3fJWIhR \n\nCatch more videos → https://goo.gle/AndroidStudio-Tools ​    \nSubscribe to Android Developers → https://goo.gle/AndroidDevs   \n\n#Featured #Develop #AndroidStudio",
      "url": "https://www.youtube.com/watch?v=bVt14IBv4NA",
      "updated": "2023-01-12T22:00:34+00:00",
      "thumbnail": "https://i3.ytimg.com/vi/bVt14IBv4NA/hqdefault.jpg"
    },
    {
      "title": "App Quality Insights window in Android Studio",
      "description": "At Google I/O 2022, we announced the App Quality Insights window in Android Studio. It lets you see Crashlytics reports within the context of your local Android Studio project, allowing you to discover, investigate, and reproduce issues more easily. The new tooling also highlights problematic lines of code that have appeared in crash reports so you can fix issues while you’re working in your code.\n\nLearn more about the App Quality Insights window → https://goo.gle/3Bqddd2 \n\nSubscribe to Android Developers → https://goo.gle/AndroidDevs  \n\n#Featured #Latest #AndroidDevelopers",
      "url": "https://www.youtube.com/watch?v=lYBeOQWKEYI",
      "updated": "2022-09-21T16:00:03+00:00",
      "thumbnail": "https://i1.ytimg.com/vi/lYBeOQWKEYI/hqdefault.jpg"
    },
    {
      "title": "What's new in Android Studio - Dolphin",
      "description": "Android Studio Dolphin is now available for download on the stable channel. The new version brings a lot of changes including tooling improvements in Jetpack Compose, stable support for Gradle Managed Devices, improved support for Wear OS, and more.\n\nChapters:\n0:00 - Introduction\n0:23 - Recomposition counts\n1:41 - Animation preview \n3:04 - Multipreview annotations\n4:25 - Gradle Managed Devices\n5:59 - Automated Test Devices\n7:09 - Wear OS emulator pairing assistant\n8:12 - New Wear OS run configurations\n9:05 - Updated Wear OS emulator toolbar\n9:32 - New Logcat\n12:08 - Outro\n\nResources: \n[Jetpack Compose tooling]\nRecomposition counts in Jetpack tooling: https://goo.gle/3bI3OVq \nRecomposition in Thinking in Compose: https://goo.gle/3zJrAsn \nPerformance best practices in Compose: https://goo.gle/3JFt3nY \nAnimation preview in Jetpack tooling: https://goo.gle/3AbFViJ \nMotion Compose sample: https://goo.gle/3Q5t4E9 \nMultipreview in Jetpack tooling: https://goo.gle/3diSkIl \n \n[Testing]\nGradle Managed Devices: https://goo.gle/3JFjju3 \nAutomated Test Device: https://goo.gle/3QsySaw \n\n[Wear OS]\nWear OS emulator pairing assistant: https://goo.gle/3A3nvzt \nWear OS run configurations: https://goo.gle/3BRhtnM \nUpdated Wear OS emulator toolbar: https://goo.gle/3p6TOYY \n\n[New Logcat]\nNew Logcat: https://goo.gle/3zBzxja  \n\nAndroid Studio issue tracker: https://goo.gle/3DBA6gB \n\nCatch more videos → https://goo.gle/AndroidStudio-Tools ​    \nSubscribe to Android Developers → https://goo.gle/AndroidDevs  \n\n#Featured #Develop #AndroidStudio",
      "url": "https://www.youtube.com/watch?v=EQ_btxhpRzU",
      "updated": "2022-09-15T19:03:38+00:00",
      "thumbnail": "https://i2.ytimg.com/vi/EQ_btxhpRzU/hqdefault.jpg"
    },
    {
      "title": "What's new in Android Studio - Bumblebee",
      "description": "Get an overview of what tools and features are available in Android Studio Bumblebee and Android Gradle plugin 7.1. \n\nNew features:\n• Compose interactive preview, \n• Layout inspector snapshots\n• New device manager and ADB over Wi-fi\n• Support for profileable apps and other profiler improvements\n• Cacheable lint task\n• Unified Gradle test runner for instrumentation tests\n• Even more stable AGP APIs for plugin authors\n\nResources:\nAndroid Studio release notes → https://goo.gle/3fRB0bq \nAGP release notes → https://goo.gle/3rHGB9Q \nFile an Android Studio bug → https://goo.gle/3fJWIhR \n\nCatch more videos → https://goo.gle/AndroidStudio-Tools     \nSubscribe to Android Developers → https://goo.gle/AndroidDevs  ​ \n\n#Featured​ #Develop​ #AndroidStudio\n\n\nproduct: Android - Android Studio; fullname: Wojtek Kaliciński;",
      "url": "https://www.youtube.com/watch?v=rIt13HjCRiI",
      "updated": "2022-01-25T18:00:30+00:00",
      "thumbnail": "https://i3.ytimg.com/vi/rIt13HjCRiI/hqdefault.jpg"
    },
    {
      "title": "What's new in Android Studio - Arctic Fox",
      "description": "Get an overview of what tools and features are available in Android Studio Arctic Fox and the new updates and requirements to Android Gradle Plugin 7.0. \n\nNew features:\n•Compose support (preview, interactive preview, layout inspector)\n•Accessibility Scanner for Layout Editor\n•Background Task Inspector\n•Test matrix for multi-device testing\n•C++ debugger improvements\n\nGradle DSL recipes → https://goo.gle/3l6QZGO\nAndroid Gradle Plugin DSL API → https://goo.gle/2USbLiG\nGradle new dependency configurations → https://goo.gle/3f5UysC\n\nCatch more videos → https://goo.gle/AndroidStudio-Tools    \nSubscribe to the Android Developers channel → https://goo.gle/AndroidDevs \n\n#Featured​ #Develop​ #AndroidStudio\n\n\nproduct: Android - Android Studio; re_ty: Publish;",
      "url": "https://www.youtube.com/watch?v=-8tSZr7iMcw",
      "updated": "2021-07-28T17:00:02+00:00",
      "thumbnail": "https://i2.ytimg.com/vi/-8tSZr7iMcw/hqdefault.jpg"
    },
    {
      "title": "What's new in Android Studio 4.2",
      "description": "Android Studio 4.2 is now available for download on the stable channel. This new version of Android Studio contains improvements to the database inspector, layout inspector, system trace, and apply changes. It also adds new functionality including an upgrade assistant for the Android Gradle plugin. \n\nSystem Trace updates → https://goo.gle/3b1x7it \nEmulator environment variables → https://goo.gle/3eW9tVo  \n\nCatch more on Android Tool Time → https://goo.gle/307zGbu ​    \nSubscribe to the Android Developers channel → https://goo.gle/AndroidDevs ​  \n\n#Featured​ #Develop​ #AndroidStudio",
      "url": "https://www.youtube.com/watch?v=Uvtf4V5pOn8",
      "updated": "2021-05-04T17:00:02+00:00",
      "thumbnail": "https://i2.ytimg.com/vi/Uvtf4V5pOn8/hqdefault.jpg"
    },
    {
      "title": "Android Code-Along: Kotlin coroutines",
      "description": "Welcome to the first episode of the Android Code-Along series where you can watch Android experts code, tackle programming challenges, and answer your questions live!\n\nIn this first episode, Manuel Vicente Vivo and Caren Chang dive into Kotlin coroutines. They’ll dive into the recently updated Kotlin coroutines codelab and answer your questions live. Follow along by working through the codelab → http://goo.gle/coroutines-codelab\n\nFor more on Kotlin coroutines, check out these guides:\nKotlin coroutines overview → http://goo.gle/coroutines-overview-1 \nBest practices guide → http://goo.gle/coroutine-best-practices\nAdditional resources → http://goo.gle/3l4qEqP \nBlog post referenced at 1:08:01 → https://goo.gle/3nqc1yj  \n\nSubscribe to Android Developers → https://goo.gle/AndroidDevs",
      "url": "https://www.youtube.com/watch?v=FWxeDqM_WIU",
      "updated": "2021-03-10T18:05:23+00:00",
      "thumbnail": "https://i3.ytimg.com/vi/FWxeDqM_WIU/hqdefault.jpg"
    },
    {
      "title": "What's new in Android Studio 4.1",
      "description": "The Android Studio 4.1 release introduces a Database inspector, Dagger navigation support, a native memory profiler, improvements for Apply Changes, the ability to use the emulator directly inside Android Studio, and more!\n\nThe new IntelliJ 2020.1 update features a new Commit tool window, a new Interactively Rebase dialog, the ability to switch between branches directly from the bottom bar, Javadocs rendering within the editor, and more.\n\nLearn more about the updates → https://goo.gle/34P6Ek7 \nApply Changes → https://goo.gle/33NioD5 \nMigrating to Material Components for Android → https://goo.gle/3hW4KCX \nDesign Tools Suite updates → https://goo.gle/3hQ55H6 \n\nAndroid Tool Time playlist → https://goo.gle/307zGbu    \nSubscribe to the Android Developers channel → https://goo.gle/AndroidDevs  \n\n\n#Featured #Develop #AndroidStudio",
      "url": "https://www.youtube.com/watch?v=Yhbr6u7f3ME",
      "updated": "2020-10-12T16:45:02+00:00",
      "thumbnail": "https://i2.ytimg.com/vi/Yhbr6u7f3ME/hqdefault.jpg"
    },
    {
      "title": "Android Basics in Kotlin: Course trailer",
      "description": "Android Basics in Kotlin is a free online course offered by Google that teaches you the fundamentals of how to build an Android app. No programming experience is required. With step-by-step instructions, you’ll learn the Kotlin programming language and how to use Android Studio to build a collection of apps! \n\nAndroid Basics in Kotlin course → https://g.co/android/basics  \n\nSubscribe to Android Developers → https://goo.gle/AndroidDevs \n\n#Featured #Kotlin #Developers",
      "url": "https://www.youtube.com/watch?v=oSim9fBFy-E",
      "updated": "2020-07-16T12:30:04+00:00",
      "thumbnail": "https://i4.ytimg.com/vi/oSim9fBFy-E/hqdefault.jpg"
    },
    {
      "title": "Support for newer Java language APIs",
      "description": "When you use Android Gradle Plugin 4.0.0 and newer, you can now use several hundred APIs from newer OpenJDK versions and your app will work on any Android device? Some of these newer Java APIs in Android 11 are supported through backporting while other APIs are also available via desugaring on older devices where the Android platform does not have the APIs on the runtime.\n\nResources:\nCheck out the 11 Weeks of Android website → https://goo.gle/30FDT8S\nFull list of supported Java 8+ APIs → https://goo.gle/3enaGD5 \n\nRelated Playlists:\nLanguages - 11 Weeks of Android playlist → https://goo.gle/languages-11weeks  \n11 Weeks of Android playlist → https://goo.gle/android-11weeks \n\nSubscribe to Android Developers → https://goo.gle/AndroidDevs \n\nSpeaker:\nMurat Yener\n\n#featured #android11 #11WeeksOfAndroid",
      "url": "https://www.youtube.com/watch?v=heCvGfOGH0s",
      "updated": "2020-07-14T13:00:18+00:00",
      "thumbnail": "https://i1.ytimg.com/vi/heCvGfOGH0s/hqdefault.jpg"
    },
    {
      "title": "State of Kotlin on Android",
      "description": "Three years ago, Android introduced Kotlin as an officially supported language. Today, 70% of top 1k Android apps now use Kotlin. Kotlin 1.4 will soon be released, with a new backend compiler and support for Android’s new UI toolkit, Jetpack Compose. In this talk, we review what’s new in Kotlin on Android, including coroutine-first Jetpack libraries like Paging 3.0, review JetBrains and Google's joint work on moving the language and tooling forward, and discuss how we decided to make coroutines the recommended approach for async work on Android.\n\nResources:\nKotlin Symbol Processing → https://goo.gle/3eJ5fz5\nCoroutines Codelabs → https://goo.gle/2TS58Jl\nCoroutines In-depth articles → https://goo.gle/2XcEVay\nCoroutines videos playlist → https://goo.gle/3gyiGDv\n\nRelated Playlists:\nAndroid 11 → https://goo.gle/android11\nModern Android Development playlist → https://goo.gle/modern-android-development\nAndroid and Kotlin playlist → https://goo.gle/android-kotlin\n\nSubscribe to Android Developers → https://goo.gle/AndroidDevs\n\nSpeaker:\nJeffrey van Gogh\n\n#featured #android11 #betalaunch \n\nevent: #Android11: The Beta Launch Show; re_ty: Publish; product: Android - Languages; fullname: Jeffrey Van Gogh;",
      "url": "https://www.youtube.com/watch?v=AgPj1Q6D--c",
      "updated": "2020-06-10T16:45:01+00:00",
      "thumbnail": "https://i2.ytimg.com/vi/AgPj1Q6D--c/hqdefault.jpg"
    },
    {
      "title": "What's new in Android Development Tools",
      "description": "Get an overview of what's new in Android Studio for Android app developers, including demos, and a tour de force presentation of relevant features that will accelerate developers workflow on the latest Android APIs.\n\nResources:\nAndroid Studio preview → https://goo.gle/2BiwW3j\nDownload Android Studio → https://goo.gle/36F8fcS\n\nRelated Playlists:\nAndroid 11 → https://goo.gle/android11\nModern Android Development playlist → https://goo.gle/modern-android-development\nAndroid Tool Time playlist → https://goo.gle/android-tool-time\n\nSubscribe to Android Developers → https://goo.gle/AndroidDevs\n\nSpeakers:\nJamal Eason, Tor Norbye\n\n#featured #android11 #betalaunch #games \n\nevent: #Android11: The Beta Launch Show; re_ty: Publish; product: Android - Android Studio; fullname: Jamal Eason, Tor Norbye;",
      "url": "https://www.youtube.com/watch?v=NMFGuy6TRqk",
      "updated": "2020-06-10T16:45:01+00:00",
      "thumbnail": "https://i3.ytimg.com/vi/NMFGuy6TRqk/hqdefault.jpg"
    },
    {
      "title": "What's new in Android Studio 4.0",
      "description": "The Android Studio 4.0 release introduces a new Motion Editor, Build Speed window, Live Layout inspector, Multi Preview for your layouts, support for Kotlin DSL script files, and a Smart editor for R8 rules.\n\nThe new Build Analyzer feature helps you understand and diagnose issues with your build process, such as disabled optimizations and improperly configured tasks.\n\nHow to use incremental annotation processors → http://goo.gle/2AxmHaQ \nImport native libraries from AAR dependencies → http://goo.gle/2LxLJc0 \nUse incremental annotation processors → http://goo.gle/2AxmHaQ  \nConfigure your external native build system → http://goo.gle/2LxLJc0 \nAndroid Studio 4.1 Canary → http://goo.gle/2Z6Hj3V \n\nSubmit feedback here → http://goo.gle/2Z914rA \nRelease notes → https://goo.gle/2ZI5CFH\n\nAndroid Tool Time playlist → https://goo.gle/307zGbu    \nSubscribe to the Android Developers channel → https://goo.gle/AndroidDevs  \n\n\n\n#Featured #Develop #AndroidStudio",
      "url": "https://www.youtube.com/watch?v=f1fHPqAYj5I",
      "updated": "2020-05-28T17:25:56+00:00",
      "thumbnail": "https://i3.ytimg.com/vi/f1fHPqAYj5I/hqdefault.jpg"
    },
    {
      "title": "What's new in Android Studio 3.6",
      "description": "Android Studio 3.6 release introduces a split code/design editor view, ViewBinding, Apply Changes improvements, NDK updates, an upgrade to the emulator location component, enhancements to the Android Studio UI, and much more.\n\nDue to popular demand, the leak detection feature is now back in the memory profiler!\n\n\nMaven Publish Gradle plugin → https://goo.gle/2Q9m4JH \nViewBinding → https://goo.gle/3aBZL7Q\nApply Changes → https://goo.gle/2u5cwXO\nApply Changes limitation → https://goo.gle/30REDpI\n\nRelease notes → https://goo.gle/2yaqHtf \nGive feedback or report a bug → https://goo.gle/36qaa3b \n\n\nAndroid Tool Time playlist → https://goo.gle/307zGbu  \nSubscribe to the Android Developers channel → https://goo.gle/AndroidDevs\n\n\n\n#AndroidStudio #Featured #Develop",
      "url": "https://www.youtube.com/watch?v=h7dCm2lQLOg",
      "updated": "2020-02-24T17:52:54+00:00",
      "thumbnail": "https://i1.ytimg.com/vi/h7dCm2lQLOg/hqdefault.jpg"
    },
    {
      "title": "Apply Changes - Android Studio 3.5 features",
      "description": "Based on your feedback, we have implemented a more practical approach with the new tool, Apply Changes. It uses platform-specific APIs to ensure reliable and consistent behavior without modifying your APK.\n\n\nBlog post → https://goo.gle/2OnYXKH \n\n\nAndroid Tool Time 3.5 Features playlist → https://goo.gle/2KXuilv \nSubscribe to Android Developers → https://goo.gle/AndroidDevs \n\n\n\n\n#AndroidStudio #Featured",
      "url": "https://www.youtube.com/watch?v=4w3cZjm0wa4",
      "updated": "2019-11-27T22:00:01+00:00",
      "thumbnail": "https://i1.ytimg.com/vi/4w3cZjm0wa4/hqdefault.jpg"
    },
    {
      "title": "Deployment toolbar - Android Studio 3.5 features",
      "description": "The deployment toolbar has gotten a nice UI tweak with the new target device dropdown. Check out how to seamlessly switch between them when you run your application!\n\n\nAndroid Tool Time 3.5 Features playlist → https://goo.gle/2KXuilv\nSubscribe to Android Developers → https://goo.gle/AndroidDevs \n\n\n\n\n#AndroidStudio #Featured",
      "url": "https://www.youtube.com/watch?v=3kSdNmkcmTE",
      "updated": "2019-11-27T22:00:00+00:00",
      "thumbnail": "https://i4.ytimg.com/vi/3kSdNmkcmTE/hqdefault.jpg"
    },
    {
      "title": "What's new in Jetpack Compose (Android Dev Summit '19)",
      "description": "Jetpack Compose was announced at Google I/O and the team has been hard at work ever since. This talk introduces Compose to new audiences, including what the project is and how it is taking shape. The talk also updates people who already know about Jetpack Compose, including how the project has evolved.\n\nPresented by: Adam Powell, Clara Bayarri, Romain Guy\n\nJetpack Sessions → https://goo.gle/AndroidJetpack\nAndroid Dev Summit '19 all sessions playlist → https://goo.gle/ADS19allsessions\n\nSubscribe to the Android Developers channel → https://goo.gle/AndroidDevs \n\nCheck out the photo album → http://goo.gle/ADS19Photos\n\n#AndroidDevSummit #jetpackcompose event: Android Dev Summit 2019; re_ty: Publish; product: Android - Jetpack Compose; fullname: Adam Powell, Clara Bayarri, Romain Guy;",
      "url": "https://www.youtube.com/watch?v=dtm2h-_sNDQ",
      "updated": "2019-10-23T21:06:22+00:00",
      "thumbnail": "https://i1.ytimg.com/vi/dtm2h-_sNDQ/hqdefault.jpg"
    },
    {
      "title": "Android Jetpack: TextClassifier updates",
      "description": "Android Q has added new updates to the TextClassifier API. Use the new features to make your apps more intuitive and helpful. Find out how to add these new features to your app!\n\nNew updates include:\nSmart Reply\nSmart Selection\nDefine Action to retrieve a definition by highlighting words\nTranslate Action to define foreign text\nsuggestedConversationActions\n\nTo learn more check out:\n\nDocumentation → https://goo.gle/2ITYKfH \n\n\nAndroid Jetpack playlist → https://goo.gle/32RR0CD \nSubscribe to Android → https://goo.gle/AndroidDevs \n\n\n#Android #AndroidQ #Collection_Jetpacklatest",
      "url": "https://www.youtube.com/watch?v=y0gbtGP62uw",
      "updated": "2019-07-26T18:28:12+00:00",
      "thumbnail": "https://i2.ytimg.com/vi/y0gbtGP62uw/hqdefault.jpg"
    },
    {
      "title": "Kotlin/Everywhere teaser",
      "description": "Learn Kotlin for mobile, cloud, and multi-platform development. Hadi Hariri and Florina Muntenescu give us a sneak peak of Kotlin/Everywhere.\n\nKotlin/Everywhere → https://goo.gle/2WaymkV\nAndroid Tool Time playlist → https://goo.gle/30kG7b8 \nSubscribe to the Google Developers Channel → https://goo.gle/2WhCWOi\n\nproduct_area: Android; product: Android Languages; event: Kotlin/Everywhere; fullname: Hadi Hariri, Florina Muntenescu; re_ty: Publish; product: Android - Languages; fullname: Florina Muntenescu;",
      "url": "https://www.youtube.com/watch?v=ggN90JKuk64",
      "updated": "2019-06-06T17:30:06+00:00",
      "thumbnail": "https://i4.ytimg.com/vi/ggN90JKuk64/hqdefault.jpg"
    },
    {
      "title": "Learn how to build Android Apps with Android Jetpack and Kotlin",
      "description": "Learn Developing Android Apps with Kotlin, developed by Google together with Udacity, is a free, self-paced online course that teaches you how to build Android apps using industry-standard tools and libraries in the Kotlin programming language.\n\nTake the course at https://goo.gle/2VUvZXg\n\nFor all courses developed by Udacity and Google, see udacity.com/google\n\nSubscribe to the Android Developers channel at https://goo.gle/AndroidDevs",
      "url": "https://www.youtube.com/watch?v=0JUgBBynPdU",
      "updated": "2019-05-15T15:59:54+00:00",
      "thumbnail": "https://i1.ytimg.com/vi/0JUgBBynPdU/hqdefault.jpg"
    },
    {
      "title": "Learn how to build Android Apps with Android Jetpack and Kotlin",
      "description": "Learn Developing Android Apps with Kotlin, developed by Google together with Udacity, is a free, self-paced online course that teaches you how to build Android apps using industry-standard tools and libraries in the Kotlin programming language.\n\nTake the course at https://goo.gle/2VUvZXg\n\nFor all courses developed by Udacity and Google, see udacity.com/google\n\nSubscribe to the Android Developers channel at https://goo.gle/AndroidDevs",
      "url": "https://www.youtube.com/watch?v=0JUgBBynPdU",
      "updated": "2019-05-15T15:59:54+00:00",
      "thumbnail": "https://i1.ytimg.com/vi/0JUgBBynPdU/hqdefault.jpg"
    },
    {
      "title": "Android Jetpack: Introducing Navigation component",
      "description": "The Navigation component is a suite of libraries, tooling and guidance for in-app navigation. The component centralizes all of the navigation information of your app in a navigation graph, providing a robust framework for implementing everything from simple button clicks to complex navigation UI patterns.\n\nAndroid Studio 3.3 includes the Navigation Editor, which visuals your navigation graph. Other features and benefits include:\n\n- Automatic handling of fragment transactions\n- Correctly handling up and back\n- Default behaviors for animations and transitions\n- Deep linking, including proper backstack generation\n- Implementing common patterns like navigation drawers and bottom nav with little additional work using the Navigation UI library → http://bit.ly/2EWYtoV\n- Type safety when passing information while navigating using the Safe Args plugin → http://bit.ly/2VR7kPM\n\n\nTo learn more about Navigation, check out:\n\n- The Navigation Component Documentation → http://bit.ly/2TJuhao\n- Navigation Codelab → http://bit.ly/2TSa9mB\n- Single Activity: Why, When, and How at Android Dev Summit '18 → http://bit.ly/2u5OoRC\n- Android Studio 3.3 Blogpost → http://bit.ly/2VWxJMc\n- Base Navigation Reference Documentation → http://bit.ly/2EY0Mbn \n- Fragment navigation Reference Documentation → http://bit.ly/2UB0ltY\n- Navigation UI Reference Documentation → http://bit.ly/2FbXKBL\n- Source code (part of AOSP) → http://bit.ly/2UBbHOG\n- Navigation Editor Issue Tracker → http://bit.ly/2VWvrws\n- Navigation Component Issue Tracker (Non Navigation Editor) → http://bit.ly/2CjXazR\n\n#Featured",
      "url": "https://www.youtube.com/watch?v=Y0Cs2MQxyIs",
      "updated": "2019-03-14T19:59:37+00:00",
      "thumbnail": "https://i2.ytimg.com/vi/Y0Cs2MQxyIs/hqdefault.jpg"
    },
    {
      "title": "Android Jetpack: Introducing WorkManager",
      "description": "The Android WorkManager library makes it easy to schedule deferrable tasks that are expected to run even if the app exits or the device restarts. Need to sync photos with a server, or do a daily cache clean-up? Then WorkManager is the library for you! Because WorkManager is compatible with API 14+ and follows system health best practices, it is the recommended approach for handling most background execution tasks on Android.\n\nWorkManager supports:\n-One-off and periodic tasks\n-Constraints, such as network availability\n-Chaining tasks, parallel or sequentially\n-Observable task state for display in UI\n-Customized threading strategy\n\nTo learn more about WorkManager, check out:\n\nThe WorkManager Documentation → http://bit.ly/2tR65UY\n\nWorkManager Codelab: Kotlin → http://bit.ly/2EMu7qe and Java → http://bit.ly/2EMnXqg\n\nWorking with WorkManager Presentation at Android Dev Summit 18' → http://bit.ly/2EweHFu\n\nGoogle Power Blogpost Series → http://bit.ly/2EIMXO3\n\nIntroducing WorkManager Blogpost → http://bit.ly/2TpJ9dR\n\nWorkManager Basics Blogpost → http://bit.ly/2C5K2hF\n\nLiveData Overview Documentation → http://bit.ly/2SI693a (for understanding getWorkInfosByTagLiveData → http://bit.ly/2NIWXKU)\n\nReference Documentation → http://bit.ly/2C4Qwxo\n\nSource code (part of AOSP) → http://bit.ly/2EKzxly\n\nIssue Tracker → http://bit.ly/2ENJgaU\n\n\nWatch more Android Jetpack videos here → https://goo.gl/kw8LPv\n\nSubscribe to the Android Developers channel here → https://goo.gl/vLYDU\n\n#Featured",
      "url": "https://www.youtube.com/watch?v=pe_yqM16hPQ",
      "updated": "2019-03-05T18:27:46+00:00",
      "thumbnail": "https://i1.ytimg.com/vi/pe_yqM16hPQ/hqdefault.jpg"
    },
    {
      "title": "Android Jetpack: EmojiCompat",
      "description": "With the EmojiCompat library, part of Jetpack, your app can get backwards-compatible emoji support on devices with API level 19 and higher and get rid of the blank square characters. To use EmojiCompat, initialize the library when the application starts by using downloadable or bundled fonts. Start supporting emojis in your text views, either by integrating the provided widgets or update your custom views by using the provided helper classes. \n\nFor more information:\nEmojiCompat guide → https://goo.gl/7bEoXB \nEmojiCompat sample app → https://goo.gl/7bEoXB \nGoogle I/O 2017 talk on “What’s new in Support Library” → https://goo.gl/KeRvqB\n\nWatch more Android Jetpack videos here → https://goo.gl/kw8LPv\n\nSubscribe to the Android Developers channel here → https://goo.gl/vLYDU\n\n#jetpack #featured",
      "url": "https://www.youtube.com/watch?v=sYGKUtM2ga8",
      "updated": "2018-06-07T17:09:43+00:00",
      "thumbnail": "https://i4.ytimg.com/vi/sYGKUtM2ga8/hqdefault.jpg"
    },
    {
      "title": "Android Jetpack: Room",
      "description": "Florina Muntenescu introduces Room, the database persistence library for Jetpack. Room allows you to:\n* write less boilerplate code\n* map query results to objects automatically\n* provide compile-time checked queries \n* test database operations, including migrations, more easily\n* avoid performing any database operations on the main thread \n\nTake a look at the resources below for more information!\n\nGoogle I/O Room Talk → https://goo.gl/Zumb6a\nRoom persistence library guide → https://goo.gl/s23p8y\nArchitecture Components code samples → https://goo.gl/xuAQQi\nPersistence Codelabs → https://goo.gl/AMwWvx\nIncrementally migrate from SQLite to Room → https://goo.gl/cDCFyN\n7 Pro-tips for Room → https://goo.gl/Kfkzvw\nRoom with a View codelab → https://goo.gl/b8KjA2\n\nWatch more Android Jetpack videos here → https://goo.gl/kw8LPv\n\nSubscribe to the Android Developers channel here → https://goo.gl/vLYDU\n\n#jetpack #featured",
      "url": "https://www.youtube.com/watch?v=SKWh4ckvFPM",
      "updated": "2018-06-04T16:57:23+00:00",
      "thumbnail": "https://i4.ytimg.com/vi/SKWh4ckvFPM/hqdefault.jpg"
    },
    {
      "title": "Android Jetpack: LiveData",
      "description": "LiveData is part of the Lifecycle library which was designed to help you solve common Android Lifecycle challenges and to make your apps more maintainable and testable. \n\nLiveData is a lifecycle-aware observable. LiveData makes it easy to keep what's showing on screen in sync with the data. Benefits include:\n\n* Lifecycle awareness: LiveData works well with the android lifecycle by only sending updates to UI components that are on screen and automatically removing listeners when a UI component is destroyed.\n* Can be returned by Room, to learn more about Room → https://goo.gl/hWAq6R\n* Reactive UIs with ViewModel and Data Binding\n* Includes basic transformations map and switchMap and MediatorLiveData\n\nLiveData is usually created in a ViewModel class → https://goo.gl/f3gTQx]\n\nThe Lifecycle library includes other classes that LiveData works with, including Lifecycle, LifecycleOwner and LifecycleObservable. To learn more about the Lifecycle library, check out → https://goo.gl/pouGCk\n\nGradle dependencies → https://goo.gl/xD4evT\n\nAlso take a look:\n\nRoom with a View Codelab [LiveData, ViewModel, Room and the architectural guidance] → http://bit.ly/2FS6YQD\nExposing error and loading state via LiveData → https://goo.gl/fjwccG\nViewModels and LiveData - Patterns and Antipatterns → https://goo.gl/1t3tmL\nLiveData with SnackBar, Navigation and other events (the SingleLiveEvent case) → http://bit.ly/2rsmwGl\nSubclassing LiveData → https://goo.gl/53Qq52\nUsing LifecycleObserver → https://goo.gl/e73zTc\nLifecycle codelab → https://goo.gl/OBkIfC\nGuide to app architecture → https://goo.gl/tfae2D\nData Binding docs → http://bit.ly/2IjFicG\n\nWatch more Android Jetpack videos here → https://goo.gl/kw8LPv\n\nSubscribe to the Android Developers channel here → https://goo.gl/vLYDU\n\n#AndroidJetpack #jetpack #featured",
      "url": "https://www.youtube.com/watch?v=OMcDk2_4LSk",
      "updated": "2018-05-31T17:03:27+00:00",
      "thumbnail": "https://i4.ytimg.com/vi/OMcDk2_4LSk/hqdefault.jpg"
    },
    {
      "title": "Android Jetpack: Autosizing TextView",
      "description": "For the best user experience with text, material design recommends using a dynamic type instead of smaller type sizes or truncating larger-size text. With Android O and Jetpack, TextView gains a new property: autoSizeTextType which allows the text to scale uniformly, when working with dynamic content. You can fine tune the auto-size by setting the minimum and maximum values and the step granularity, or by using preset text sizes. \n\nFor more info:\nAutosizing TextViews guide → https://goo.gl/ythdYL\nGoogle I/O 2017 talk on “What’s new in Support Library” → https://goo.gl/Ukf4Mz\n\nWatch more Android Jetpack videos here → https://goo.gl/kw8LPv\n\nSubscribe to the Android Developers channel here → https://goo.gl/vLYDU\n\n#jetpack #featured",
      "url": "https://www.youtube.com/watch?v=JYrpEAz_A1U",
      "updated": "2018-05-30T17:05:09+00:00",
      "thumbnail": "https://i3.ytimg.com/vi/JYrpEAz_A1U/hqdefault.jpg"
    },
    {
      "title": "Android Jetpack: ViewModel",
      "description": "ViewModel is part of the Lifecycle library which was designed to help you solve common Android Lifecycle challenges and to make your apps more maintainable and testable. \n\nA ViewModel holds your app's UI data in a lifecycle conscious way that survives configuration changes. Separating your app's UI data from your Activity and Fragment classes lets you better follow the single responsibility principle: Your Activities and Fragments are responsible for drawing data to the screen, while your ViewModel can take care of holding and processing all the data needed for the UI.\n\nMaking a ViewModel is simple:\n* Adding the Lifecycle library to your build.gradle file\n* Extending the ViewModel class\n* Use ViewModelProviders to associate your ViewModel with your UI controller\n\nThen you can move all of your UI related data into your new ViewModel. If you need to customize ViewModel construction, you can create a ViewModelProvider.NewInstanceFactory. ViewModels also work great with the LiveData class to create reactive UIs! \n\nA few words of warning: don't store Contexts in ViewModels and don't confuse ViewModels with the onSaveInstanceState method.\n\nFor more information, check out the video and links below!\n\nGradle dependencies → https://goo.gl/nnrvKT\nViewModels - A Simple Example (Good place to start for very basic usage) → https://goo.gl/pa2F1C\nViewModel Documentation → https://goo.gl/T3Jrzt\nViewModels - Persistence, onSaveInstanceState(), Restoring UI State and Loaders → https://goo.gl/LC1hXV\nArchitecture Blueprint sample with Lifecycle library  \n* Java → https://goo.gl/tPsEdh \n* Kotlin → https://goo.gl/L3NWQH \nArchitecture Components samples → https://goo.gl/KCztpb \nViewModels and LiveData  Patterns and Antipatterns → https://goo.gl/1t3tmL\nExample of ViewModel factory in sample app → https://goo.gl/s7R86g\nArchitecture Components landing page → https://d.android.com/arch\nGuide to app architecture → https://goo.gl/Vqtt34\n\nWatch more Android Jetpack videos here → https://goo.gl/kw8LPv\n\nSubscribe to the Android Developers channel here → https://goo.gl/vLYDU\n\n#jetpack #featured",
      "url": "https://www.youtube.com/watch?v=5qlIPTDE274",
      "updated": "2018-05-29T16:59:53+00:00",
      "thumbnail": "https://i2.ytimg.com/vi/5qlIPTDE274/hqdefault.jpg"
    },
    {
      "title": "Android Jetpack: Paging",
      "description": "Paging facilitates gradual on-demand data loading from a local or network data source, allowing apps to work with large data sets, including support for RecyclerView. See what the main Paging Library components are, how you use them and how they fit into your app’s architecture.\n\nRead more about the Paging Library here → https://goo.gl/Jw5Q8A\nTake a look at the codelab → https://goo.gl/v8qr8N \nSample apps → https://goo.gl/9AzUSz\n\nWatch more Android Jetpack videos here → https://goo.gl/kw8LPv\n\nSubscribe to the Android Developers channel here → https://goo.gl/vLYDU\n\n#jetpack #featured",
      "url": "https://www.youtube.com/watch?v=QVMqCRs0BNA",
      "updated": "2018-05-21T17:19:49+00:00",
      "thumbnail": "https://i2.ytimg.com/vi/QVMqCRs0BNA/hqdefault.jpg"
    },
    {
      "title": "Android Jetpack: KTX - sweeter Kotlin Android development",
      "description": "Earlier this year we launched a preview of Android KTX - a set of extensions to the Android framework aimed at making your development with Kotlin more clear, pleasant and idiomatic. We've changed the name to Core-KTX and now we’re launching the 1.0 beta version, as part of Android Jetpack - our set of libraries aimed at accelerating Android development.\n\nGet started here → https://developer.android.com/jetpack\n\nWatch more Android Jetpack videos here → https://goo.gl/kw8LPv\n\nSubscribe to the Android Developers channel here → https://goo.gl/vLYDU\n\n#jetpack #featured",
      "url": "https://www.youtube.com/watch?v=r_19VZ0xRO8",
      "updated": "2018-05-17T17:00:27+00:00",
      "thumbnail": "https://i3.ytimg.com/vi/r_19VZ0xRO8/hqdefault.jpg"
    },
    {
      "title": "Android Jetpack: KTX - sweeter Kotlin Android development",
      "description": "Earlier this year we launched a preview of Android KTX - a set of extensions to the Android framework aimed at making your development with Kotlin more clear, pleasant and idiomatic. We've changed the name to Core-KTX and now we’re launching the 1.0 beta version, as part of Android Jetpack - our set of libraries aimed at accelerating Android development.\n\nGet started here → https://developer.android.com/jetpack\n\nWatch more Android Jetpack videos here → https://goo.gl/kw8LPv\n\nSubscribe to the Android Developers channel here → https://goo.gl/vLYDU\n\n#jetpack #featured",
      "url": "https://www.youtube.com/watch?v=r_19VZ0xRO8",
      "updated": "2018-05-17T17:00:27+00:00",
      "thumbnail": "https://i3.ytimg.com/vi/r_19VZ0xRO8/hqdefault.jpg"
    },
    {
      "title": "Android Jetpack: Improve your app's architecture",
      "description": "Announced at I/O 2017, Architecture Components are one part of Jetpack. These components include Room, LiveData, ViewModel, Paging, WorkManager and Navigation. Used separately they solve common but complex architecture issues, such as managing Android Lifecycle (LiveData/ViewModel), or handling background tasks (WorkManager). Used together, you can ditch the boilerplate, build robust apps faster, and focus on the code that makes your app unique!\n\nCheck out the docs and samples:\nArchitecture Components docs → https://goo.gl/guDBdr\nArchitecture Components samples → https://goo.gl/9AzUSz\nGradle dependencies → https://goo.gl/xD4evT\nApp Architecture Guide → https://goo.gl/j5Zztk\nGuide to Background Operations → http://bit.ly/2wjVHZI\n\nCheck out the codelabs:\nRoom with a View Codelab [LiveData, ViewModel, Room and the architectural guidance] → http://bit.ly/2FS6YQD\nAndroid WorkManager Codelab → http://bit.ly/2KGdQ7g\nAndroid Navigation Codelab → http://bit.ly/2rs7jEy\nAndroid Paging Codelab → http://bit.ly/2rmSqDk\nAndroid Lifecycle-aware components Codelab [LiveData and ViewModel] → https://goo.gl/OBkIfC\nAndroid Persistence Codelab [Room] → https://goo.gl/AMwWvx\n\nLike videos? Check out these other DevBytes:\nRoom → https://goo.gl/1ePbRb\nViewModel → https://goo.gl/i6Xh8c\nPaging Library → https://goo.gl/UmkLTG\nLiveData → https://goo.gl/exEQbm\n\nWatch more Android Jetpack videos here → https://goo.gl/kw8LPv\n\nSubscribe to the Android Developers channel here → https://goo.gl/vLYDU\n\n#AndroidJetpack #jetpack #featured",
      "url": "https://www.youtube.com/watch?v=7p22cSzniBM",
      "updated": "2018-05-14T19:35:44+00:00",
      "thumbnail": "https://i4.ytimg.com/vi/7p22cSzniBM/hqdefault.jpg"
    },
    {
      "title": "Building Kotlin friendly APIs: Interoperability",
      "description": "In this series, Sean McQuillan (@objcode) covers supporting Kotlin in existing projects. For both app developers and library writers, there’s a lot you can do to make your existing code Kotlin friendly. This video covers how to make sure your existing Java programming language code works naturally in Kotlin!\n\nInterop Guide → https://goo.gl/Dx7qZN\nDokka → https://goo.gl/wa14wP",
      "url": "https://www.youtube.com/watch?v=fWuzGonOM1c",
      "updated": "2018-05-10T19:57:43+00:00",
      "thumbnail": "https://i3.ytimg.com/vi/fWuzGonOM1c/hqdefault.jpg"
    },
    {
      "title": "Introducing Android Jetpack",
      "description": "Android Jetpack is a set of components, tools and architectural guidance that make it quick and easy to build great Android apps.  Components are individually adoptable but built to work together while taking advantage of Kotlin language features that make you more productive. Jetpack manages tedious activities like background tasks, navigation, and lifecycle management, so you can eliminate boilerplate code and focus on your what makes your app great. Built around modern design practices, Jetpack components enable fewer crashes and less memory leaked with backwards-compatibility baked in.\n\nThis video is also subtitled in Chinese, Indonesian, Italian, Japanese, Korean, Portuguese, and Spanish\n\nRead more here:\nAndroid Jetpack → https://d.android.com/jetpack\nGetting Started with Jetpack → https://goo.gl/bGnL7N\n\nSubscribe to the Android Developers channel here → https://goo.gl/vLYDU\n\n#jetpack #featured",
      "url": "https://www.youtube.com/watch?v=LmkKFCfmnhQ",
      "updated": "2018-05-08T20:58:12+00:00",
      "thumbnail": "https://i1.ytimg.com/vi/LmkKFCfmnhQ/hqdefault.jpg"
    },
    {
      "title": "Introducing Android Jetpack for developers",
      "description": "Android Jetpack is here to accelerate Android development by facilitating a modern app architecture, eliminating boilerplate code, simplifying complex tasks, and providing robust backwards compatibility.\n\nGet started here → https://developer.android.com/jetpack\n\nWatch more Android Jetpack videos here → https://goo.gl/kw8LPv\n\nSubscribe to the Android Developers channel here → https://goo.gl/vLYDU\n\n#jetpack #featured",
      "url": "https://www.youtube.com/watch?v=r8U5Rtcr5UU",
      "updated": "2018-05-08T20:57:56+00:00",
      "thumbnail": "https://i3.ytimg.com/vi/r8U5Rtcr5UU/hqdefault.jpg"
    },
    {
      "title": "Adding picture in picture to your app",
      "description": "Sean McQuillan (@objcode) gives an overview of adding Picture in Picture support for Android apps. With Android O apps, you can use Picture in Picture on phones to create magical experiences by overlaying other content during critical user tasks like watching a video or navigating.\n\nLearn how to design a Picture in Picture (PIP) overlay, show it to your users, and allow user interaction while in PIP mode.\n\nPIP Blog Post: https://goo.gl/DxVADC\nPIP Navigation Patterns: https://goo.gl/DxVADC\nSample: https://goo.gl/kU7wqV\nDocs: https://goo.gl/8xzpxv\nHandle Configuration Changes: https://goo.gl/ABPJ9w\n\nSubscribe to the Android Developers channel here: https://goo.gl/vLYDU",
      "url": "https://www.youtube.com/watch?v=hBPd2q2dmXY",
      "updated": "2018-02-26T21:20:00+00:00",
      "thumbnail": "https://i1.ytimg.com/vi/hBPd2q2dmXY/hqdefault.jpg"
    },
    {
      "title": "What's new in the Android 8.1 developer preview",
      "description": "Dan Galpin highlights many of the the changes in the Android 8.1 Developer Preview, now available to developers on supported devices.  Android 8.1 contains a targeted set of enhancements, including optimizations for Android Go and a new Neural Networks API.  There are also many smaller enhancements, including WallpaperColors, changes to the Autofill Framework, and a new SharedMemory API. On Pixel, Android 8.1 supports lower latency audio using AAUDIO_SHARING_MODE_EXCLUSIVE, while on the Pixel 2, the developer preview allows Android apps to take advantage of HDR+ implemented on the Pixel Visual Core, Google's first custom-designed co-processor for consumer products.\n\nAndroid 8.1 Developer Preview: https://goo.gl/ABnyNP\nOboe currently in developer preview: https://goo.gl/P8tg39\nIntroduction to TensorFlow Lite: https://goo.gl/8GsJVL\n\nCheck out the Android Oreo for Developers playlist here: https://goo.gl/wMKYQt\nSubscribe to the Android Developers channel here: https://goo.gl/vLYDU\n\n#androido #android81",
      "url": "https://www.youtube.com/watch?v=ldwJA_9AIww",
      "updated": "2017-11-27T20:20:01+00:00",
      "thumbnail": "https://i1.ytimg.com/vi/ldwJA_9AIww/hqdefault.jpg"
    },
    {
      "title": "Account Transfer API for Android apps",
      "description": "Sean McQuillan covers the Account Transfer API for Android developers. This feature allows developers to move user accounts to user’s new phone. Android users upgrade devices regularly and optimizing this flow will improve your retention numbers - and keep your users happy!\n\n\nAccount Transfer API: https://goo.gl/7r63Pv\nSample code: https://goo.gl/5wLPYk\n\nAnd to learn more about Account Manager,\n\nAccount Manager: https://goo.gl/MyVHFo\nAccount Authenticator Activity: https://goo.gl/aUJCK2\nAbstract Account Authenticator: https://goo.gl/njNgMP\n\nCheck out the rest of the playlist here: https://goo.gl/WiDD2p\n\nSubscribe to the Android Developers channel here: https://goo.gl/vLYDU\n\n#identity",
      "url": "https://www.youtube.com/watch?v=Gtp2oHGBqNY",
      "updated": "2017-11-21T21:57:15+00:00",
      "thumbnail": "https://i4.ytimg.com/vi/Gtp2oHGBqNY/hqdefault.jpg"
    },
    {
      "title": "Improving retention for Android apps",
      "description": "Sean McQuillan covers Google Sign-In, Smart Lock, Autofill Framework, and Auto Backup for Android developers. These features allow app developers to improve their retention and user experience. Android users upgrade devices regularly and providing an optimized sign in and data transfer to their new device will help you improve your retention numbers - and keep your users happy!\n\n\nGoogle Sign-In: https://goo.gl/GbfqgP\nSmart Lock for Passwords: https://goo.gl/GbfqgP\nAndroid Autofill Framework: https://goo.gl/nZuPgM\nAuto Backup: https://goo.gl/ekwCGY\n\nCheck out the rest of the playlist here: https://goo.gl/WiDD2p\n\nSubscribe to the Android Developers channel here: https://goo.gl/vLYDU",
      "url": "https://www.youtube.com/watch?v=t3q4hEXcosY",
      "updated": "2017-11-21T00:39:57+00:00",
      "thumbnail": "https://i1.ytimg.com/vi/t3q4hEXcosY/hqdefault.jpg"
    },
    {
      "title": "Using fonts in Android",
      "description": "Android O and Support Library 26 introduce new ways of working with fonts. You can now bundle fonts as resources by adding the font file in the res/font folder and use it like any other asset in XML layouts, styles or programmatically via the Typeface. \n\nInstead of bundling your font files in the APK, you can now let the APK download them. Your app’s size is decreased and overall system health is improved, since multiple APKs can use the same font. \n\nFor more info, check out:\nWorking with Fonts guide: https://goo.gl/BH43G7\nDownloadable Fonts guide: https://goo.gl/1qot1v\nDownloadable Fonts sample: https://goo.gl/xJ5O3C\nGoogle I/O 2017 talk on “What’s new in Support Library”: https://goo.gl/Ukf4Mz\n\nSubscribe to the Android Developers channel here: https://goo.gl/vLYDU",
      "url": "https://www.youtube.com/watch?v=TfB-TsLFJdM",
      "updated": "2017-09-12T17:01:32+00:00",
      "thumbnail": "https://i1.ytimg.com/vi/TfB-TsLFJdM/hqdefault.jpg"
    },
    {
      "title": "Notification updates in Android Oreo",
      "description": "Notification Channels: https://goo.gl/2iyGTx\nNotification Badges: https://goo.gl/PxZ9tN\n\nAndroid Oreo introduces several key updates to notifications, including notification channels and notification badges. Notification channels are collections of associated notifications. Each notification has a channel, and users can set preferences for each notification channel via the app's settings.\n\nNotification channels are especially important because they are required for all notifications on Android Oreo or your notifications won't display!\n\nAndroid Oreo also introduces Notification badges that appear on app icons in supported launchers to show the user that there are outstanding notifications.\n\nTo learn more about notification updates, check out the new notification documentation, sample and codelab in Java and Kotlin.\nNotification Documentation: https://goo.gl/mIJ00m\nNotification Sample: https://goo.gl/3wUNkZ\nJava Codelab: https://goo.gl/btKdpo\nKotlin Codelab: https://goo.gl/rQqBv8\n\nFor a full list of changes in Android O, check out this video: https://goo.gl/SyRgiB\n\nSubscribe to the Android Developers channel here: https://goo.gl/vLYDU",
      "url": "https://www.youtube.com/watch?v=zGIw4MIJn5o",
      "updated": "2017-09-07T21:29:50+00:00",
      "thumbnail": "https://i3.ytimg.com/vi/zGIw4MIJn5o/hqdefault.jpg"
    },
    {
      "title": "Android adaptive icons",
      "description": "Adaptive icons, introduced in Android-O, are a new way to deliver your application’s icon which will be masked by user’s devices; making all of the icons on it more coherent. Developers supply separate foreground and background layers allowing devices to perform interesting visual presentations and animation.\n\nProviding an adaptive icon is straightforward and will help your app to fit in on Android-O user’s devices and benefit from the new ways they can be displayed.\n\nSubscribe to the Android Developers channel here: https://goo.gl/vLYDU",
      "url": "https://www.youtube.com/watch?v=5MHFYfXno9c",
      "updated": "2017-09-05T21:02:55+00:00",
      "thumbnail": "https://i2.ytimg.com/vi/5MHFYfXno9c/hqdefault.jpg"
    },
    {
      "title": "What’s new in Support Library v26",
      "description": "Support Library v26 comes with a lot of new features, specifically: fonts as resources and downloadable fonts, access to backwards compatible emoji support via the new EmojiCompat library, the ability to allow the text size of your TextView to expand or contract automatically to fill its layout, the option to implement animations driven by physics forces with the ‘spring and fling’ animations, improved parity with the Android framework, various form factors such as Wear and TV, and, finally, a library slimmed down by moving minSdk to 14 and dropping 1.4k methods. \n\nFor more info, check out:\nSupport Library Docs: https://goo.gl/rOJEa7\nWhat's New in Android Support Library, Google I/O '17 talk: https://goo.gl/Ukf4Mz\n\nSubscribe to the Android Developers channel here: https://goo.gl/vLYDU",
      "url": "https://www.youtube.com/watch?v=2GTivnMCR-Y",
      "updated": "2017-08-29T17:00:39+00:00",
      "thumbnail": "https://i3.ytimg.com/vi/2GTivnMCR-Y/hqdefault.jpg"
    },
    {
      "title": "Android Oreo background execution limits",
      "description": "Android Oreo introduces important background execution limits that all developers should be aware of, such as not being able to freely launch services from the background and restrictions on implicit broadcast receivers. See how these changes affect apps and best practices for updating your apps.\n\nIf you'd like to learn more, check out the documentation:\n\nO Behavior Change Documentation\nAndroid 8.0 Behavior changes: https://goo.gl/Vo9Cp5\nBackground Execution Limits: https://goo.gl/efLcV2\nImplicit Broadcast Exceptions: https://goo.gl/ZTXAvE\nLocation Limits: https://goo.gl/iT3PVW\n\nJobs\nJobScheduler Improvements: https://goo.gl/xD9Muk\nJobIntentService: https://goo.gl/YkR9T4\nIntelligent Job-Scheduling: https://goo.gl/1Gv7TW\nFirebase JobDispatcher: https://goo.gl/wYr4o2\n\nSubscribe to the Android Developers channel here: https://goo.gl/vLYDU\n\n#androido #develop #background",
      "url": "https://www.youtube.com/watch?v=Pumf_4yjTMc",
      "updated": "2017-08-21T19:00:37+00:00",
      "thumbnail": "https://i1.ytimg.com/vi/Pumf_4yjTMc/hqdefault.jpg"
    },
    {
      "title": "What's new in Android Oreo for developers",
      "description": "Android Oreo is available to consumers. Here's a summary of what you need to know to make sure that these early adopters have a great experience, along with ways to enhance that experience with new O features and the support library.\n\nhttps://goo.gl/X4CGFR\nhttps://goo.gl/rOJEa7\n\nSubscribe to the Android Developers channel here: https://goo.gl/vLYDU\n\n#androido #develop",
      "url": "https://www.youtube.com/watch?v=7kD0ZYzJbYo",
      "updated": "2017-08-21T18:59:59+00:00",
      "thumbnail": "https://i4.ytimg.com/vi/7kD0ZYzJbYo/hqdefault.jpg"
    },
    {
      "title": "Kotlin: Android support announced at Google I/O",
      "description": "Visit these sites for more information: \nKotlin website - https://goo.gl/W6bJJJ, Kotlin and Android documentation - https://goo.gl/NWt6O7\n\nAndroid announced full support for the Kotlin language at Google I/O along with an increased commitment to both the Java programming language and C++.  We interviewed key stakeholders involved with the decision from both Google and Jetbrains to help understand why this decision was made and what it means to the Android developer community.\n\nSubscribe to the Android Developers channel here: https://goo.gl/vLYDU\n\n#Kotlin #Develop",
      "url": "https://www.youtube.com/watch?v=NqlRg1_bCC4",
      "updated": "2017-06-08T20:55:00+00:00",
      "thumbnail": "https://i3.ytimg.com/vi/NqlRg1_bCC4/hqdefault.jpg"
    },
    {
      "title": "Life is great and everything will be ok, Kotlin is here (Google I/O '17)",
      "description": "Using Kotlin for Android development has grown in popularity over the past few years and is now officially supported by Google. If you are not already using Kotlin you might be wondering why and how to adopt it. In the first part of this talk, Jake will cover advancing the usage and design patterns of the language for Android development to solve larger problems. In the second part, Christina will share her experience using Kotlin in production, from mistakes to successes, and help you answer questions your team/company might ask about adopting it.\n\nWatch more Android talks at I/O '17 here: https://goo.gl/c0LWYl\nSee all the talks from Google I/O '17 here: https://goo.gl/D0D4VE\n\nSubscribe to the Android channel: http://goo.gl/GEh1ds\n\n#io17 #GoogleIO #GoogleIO2017 event: Google I/O 2017; re_ty: Publish;",
      "url": "https://www.youtube.com/watch?v=fPzxfeDJDzY",
      "updated": "2017-05-19T23:12:25+00:00",
      "thumbnail": "https://i3.ytimg.com/vi/fPzxfeDJDzY/hqdefault.jpg"
    },
    {
      "title": "Introduction to Kotlin (Google I/O '17)",
      "description": "Kotlin is now an officially supported language for Android. This session provides an introduction to the language, covering basic concepts and tips for developers to get started with it.\n\nWatch more Android talks at I/O '17 here: https://goo.gl/c0LWYl\nSee all the talks from Google I/O '17 here: https://goo.gl/D0D4VE\n\nSubscribe to the Android channel: http://goo.gl/GEh1ds\n\n#io17 #GoogleIO #GoogleIO2017 event: Google I/O 2017; re_ty: Publish;",
      "url": "https://www.youtube.com/watch?v=X1RVYt2QKQE",
      "updated": "2017-05-19T19:43:07+00:00",
      "thumbnail": "https://i1.ytimg.com/vi/X1RVYt2QKQE/hqdefault.jpg"
    },
    {
      "title": "Getting started with Kotlin",
      "description": "We have never added a new programming language to Android... until now! With Android Studio 3.0 we are officially supporting Kotlin for creating Android apps. Learn how to start a new project with the Kotlin language enabled or how to convert your existing classes using the Convert Java file to Kotlin refactoring.\n\nFor more information about the language syntax and idioms, refer to our blog post: https://android-developers.googleblog.com/2017/05/android-announces-support-for-kotlin.html\n\n#tools #kotlin",
      "url": "https://www.youtube.com/watch?v=czKo-jPVweg",
      "updated": "2017-05-18T20:19:22+00:00",
      "thumbnail": "https://i4.ytimg.com/vi/czKo-jPVweg/hqdefault.jpg"
    },
    {
      "title": "What's new in Android (Google I/O '17)",
      "description": "Overview of the latest developer-facing features in the Android platform, including the O Developer Preview SDK, the Support Libraries and other new and exciting developments.\n\nWatch more Android talks at I/O '17 here: https://goo.gl/c0LWYl\nSee all the talks from Google I/O '17 here: https://goo.gl/D0D4VE\n\nSubscribe to the Android channel: http://goo.gl/GEh1ds\n\n#io17 #GoogleIO #GoogleIO2017 event: Google I/O 2017; re_ty: Publish;",
      "url": "https://www.youtube.com/watch?v=1N9KveJ-FU8",
      "updated": "2017-05-17T23:53:01+00:00",
      "thumbnail": "https://i2.ytimg.com/vi/1N9KveJ-FU8/hqdefault.jpg"
    },
    {
      "title": "What's New in Android O for developers",
      "description": "Android O Developer Preview site:  https://developer.android.com/preview/index.html\n\nAndroid Developers preview of the upcoming O release - Learn how to use the new behavior changes like the new Background restrictions and new features like Notification channels, Autofill framework, XML resources and many more! \n\nCheckout the preview site to see how you can be compatible with Android O even before you start targeting O.\n\n#androido #featured",
      "url": "https://www.youtube.com/watch?v=63pKwVE4Uog",
      "updated": "2017-03-27T21:00:31+00:00",
      "thumbnail": "https://i3.ytimg.com/vi/63pKwVE4Uog/hqdefault.jpg"
    },
    {
      "title": "VectorDrawable for smaller APKs (Android Performance Patterns Season 6 Ep. 6)",
      "description": "One of the interesting parts about building an Android application is all the awesome configurations of screen sizes and form factors. And if you’re a developer who prides themselves on being available on the most devices possible, then chances are you’ve got lots of your images and icons at each specific resolution you need to support. But be warned, this might be causing a large issue with the size of your APKs.\n\nIf you’re trying to squeeze every last byte out of your APK file size, then Vector Drawables are a handy solution.\n\n\nWatch more Android Performance Patterns here: http://goo.gl/4ZJkY1\n\nJoin the G+ Community here : http://goo.gl/g7mxmI\n\n #PERFMATTERS #performance #vectordrawable #apksize #compatibility #ui #bitmaps #graphics #drawables",
      "url": "https://www.youtube.com/watch?v=Ls3KzLRmrXg",
      "updated": "2016-09-20T17:22:06+00:00",
      "thumbnail": "https://i1.ytimg.com/vi/Ls3KzLRmrXg/hqdefault.jpg"
    },
    {
      "title": "Smaller APKs : A checklist (Android Performance Patterns Season 6 Ep. 5)",
      "description": "By now, everyone knows that APK size is an important factor when it comes to user acquisition. I mean who wants to wait 30 minutes to download some massive app on a 2G connection? Or paying high data rates for that application on a metered network?\n\nThankfully Colt McAnlis is here to help keep YOUR app from being one of those data hogs, with some important tools and tricks to keep up your sleeve.\n\nWatch more Android Performance Patterns here: http://goo.gl/4ZJkY1\n\nJoin the G+ Community here : http://goo.gl/g7mxmI\n\n #PERFMATTERS #tools",
      "url": "https://www.youtube.com/watch?v=u5xP4tFQlkA",
      "updated": "2016-09-13T17:00:33+00:00",
      "thumbnail": "https://i2.ytimg.com/vi/u5xP4tFQlkA/hqdefault.jpg"
    },
    {
      "title": "App Launch time & Bloated Application objects (Android Performance Patterns Season 6 Ep. 3)",
      "description": "One of the hangups of having an awesome, modern, complex mobile application is all the stuff you gotta do to get it working just so the user is happy. It seems counter-intuitive then, that when you do all that stuff before the app boots up, it actually causes unhappy users. And one of the common problems with slow launch performance is doing too much stuff inside of your application’s initialization code.\n\nLinks:\nApp Launch Time 101 video: https://goo.gl/YCCRIA\nAndroid Studio Method Tracer: https://goo.gl/jtuqsJ\nAndroid Studio Systrace: https://goo.gl/mjxGvb\n\nWatch more Android Performance Patterns here: http://goo.gl/4ZJkY1\n\nJoin the G+ Community here : http://goo.gl/g7mxmI\n\n #PERFMATTERS #performance #ux #lifecycle",
      "url": "https://www.youtube.com/watch?v=Y-u511RsC3o",
      "updated": "2016-08-30T16:59:07+00:00",
      "thumbnail": "https://i2.ytimg.com/vi/Y-u511RsC3o/hqdefault.jpg"
    },
    {
      "title": "App Launch time & Activity creation (Android Performance Patterns Season 6 Ep. 2)",
      "description": "As developers, there’s nothing we like more than an amazing Activity that delights and entertains our users. But sadly initializing all the subsystems, resources, and layouts to provide that experience takes a bit of time and memory, meaning the users will have to wait for their transcendent experience. As such one of the most important things you can do for the health and performance perception of your application, is optimizing the performance of loading your activities.\n\nIn this video Colt McAnlis talks about the some of the most common problems in activity loading, and what tools you can use to track down the issues.\n\nLinks:\nApp Launch Time 101 video: https://goo.gl/YCCRIA\nAndroid Studio Method Tracer: https://goo.gl/jtuqsJ\nAndroid Studio Systrace: https://goo.gl/mjxGvb\n\nWatch more Android Performance Patterns here: http://goo.gl/4ZJkY1\n\nJoin the G+ Community here : http://goo.gl/g7mxmI\n\n #PERFMATTERS #performance #lifecycle",
      "url": "https://www.youtube.com/watch?v=AkafJ6NdrhY",
      "updated": "2016-08-23T17:19:41+00:00",
      "thumbnail": "https://i2.ytimg.com/vi/AkafJ6NdrhY/hqdefault.jpg"
    },
    {
      "title": "App Launch time 101 (Android Performance Patterns Season 6 Ep. 1)",
      "description": "Every quarter second a user spends staring at a blank screen, instead of interfacing with your app, is a quarter second more they are willing to close your app, and give their attention to something else. As such, you want to make sure that your app launches as fast as possible.\n\nIn this video Colt McAnlis talks about the perception issues around launch time performance, introduces some common problems, and talks about tools that can help you track them down.\n\nLinks:\nLaunch Times and Optimized Activities video: https://goo.gl/VwPfNR\nApp Launch time & Bloated Application objects video: https://goo.gl/dB5IoQ\n App Launch time & Themed launch screens video: https://goo.gl/L8YMsp\n\nWatch more Android Performance Patterns here: http://goo.gl/4ZJkY1\n\nJoin the G+ Community here : http://goo.gl/g7mxmI\n\n #PERFMATTERS #performance #ux #lifecycle",
      "url": "https://www.youtube.com/watch?v=Vw1G1s73DsY",
      "updated": "2016-08-16T17:00:05+00:00",
      "thumbnail": "https://i3.ytimg.com/vi/Vw1G1s73DsY/hqdefault.jpg"
    },
    {
      "title": "Profile GPU Rendering : M Update (Android Performance Patterns Season 5, Ep. 10)",
      "description": "The “Profile GPU Rendering” tool has been updated for M release of Android! In this video +Colt McAnlis will introduce you to the new information this tool describes, alongside what to do when performance in one of these areas starts to suffer.\n\nFor versions older than M, check out our other video on Profile GPU Rendering: https://goo.gl/s8ZmyQ \n\n\nWatch more Android Performance Patterns here: http://goo.gl/4ZJkY1\n\nJoin the G+ Community here : http://goo.gl/g7mxmI\n\n #PERFMATTERS",
      "url": "https://www.youtube.com/watch?v=erGJw8WDV74",
      "updated": "2016-04-26T17:02:05+00:00",
      "thumbnail": "https://i2.ytimg.com/vi/erGJw8WDV74/hqdefault.jpg"
    },
    {
      "title": "The Importance of Thread Priority (Android Performance Patterns Season 5, Ep. 9)",
      "description": "Fun fact : Modern CPUs can only handle a certain number of threads at one time. Once you get above that limit, they have to start scheduling which thread gets the next open block of CPU processing time. And even better : This can influence the performance of your Android app.\n\nIn this video +Colt McAnlis introduces the concept of thread priority, why it’s important to work with, and how to set it for threads you create, in a very sane way.\n\n\nWatch more Android Performance Patterns here: http://goo.gl/4ZJkY1\n\nJoin the G+ Community here : http://goo.gl/g7mxmI\n\n #PERFMATTERS",
      "url": "https://www.youtube.com/watch?v=NwFXVsM15Co",
      "updated": "2016-04-19T17:00:10+00:00",
      "thumbnail": "https://i3.ytimg.com/vi/NwFXVsM15Co/hqdefault.jpg"
    },
    {
      "title": "The Zen of IntentService. (Android Performance Patterns Season 5 ep7)",
      "description": "Dealing with Intent responses is a backbone concept to Android development. But in situations where an Intent results in long-running work, you need to find an efficient way to offload that to a different thread.\n\nIn this video +Colt McAnlis discusses where IntentServices fit into the big picture of threading on Android, alongside noting some nuances that come along with using this class.\n\n\nWatch more Android Performance Patterns here: http://goo.gl/4ZJkY1\n\nJoin the G+ Community here : http://goo.gl/g7mxmI\n\n #PERFMATTERS #background",
      "url": "https://www.youtube.com/watch?v=9FweabuBi1U",
      "updated": "2016-04-05T17:07:34+00:00",
      "thumbnail": "https://i2.ytimg.com/vi/9FweabuBi1U/hqdefault.jpg"
    },
    {
      "title": "Swimming in Threadpools. (Android Performance Patterns Season 5, Ep. 6)",
      "description": "We know that you’re an awesome engineer, and you’re using threading to the MAX. But over time, it gets harder and harder to handle how work is distributed across all those AsyncTasks and HandlerThreads. It gets especially tricky when you try to break up large blocks of work, like image processing, and find a threaded solution for it.\n\nIn this video Colt McAnlis introduces the ThreadPoolExecuter class, and shows how it can fill the gap for all of your scalable threading computation needs.\n\n\nWatch more Android Performance Patterns here: http://goo.gl/4ZJkY1\n\nJoin the G+ Community here: https://goo.gl/6ccETk\n\n #PERFMATTERS",
      "url": "https://www.youtube.com/watch?v=uCmHoEY1iTM",
      "updated": "2016-03-29T17:00:57+00:00",
      "thumbnail": "https://i2.ytimg.com/vi/uCmHoEY1iTM/hqdefault.jpg"
    },
    {
      "title": "Memory & Threading. (Android Performance Patterns Season 5, Ep. 3)",
      "description": "It’s no secret that threaded code and system memory don’t play well together, and on Android, this is no different. The same threading+memory problems you’d see elsewhere, exist here too… except for a few caveats.\n\nIn this video +Colt McAnlis introduces some of the nuances of how memory and threading work together on android, and gives some tips on how you can avoid memory leaks and other issues with lifecycle changes.\n\n\n\nWatch more Android Performance Patterns here: http://goo.gl/4ZJkY1\n\nJoin the G+ Community here : http://goo.gl/g7mxmI\n\n #PERFMATTERS\n\nSubscribe to the Android Developers channel at http://goo.gl/GEh1ds",
      "url": "https://www.youtube.com/watch?v=tBHPmQQNiS8",
      "updated": "2016-03-08T18:00:24+00:00",
      "thumbnail": "https://i1.ytimg.com/vi/tBHPmQQNiS8/hqdefault.jpg"
    }
  ]
}